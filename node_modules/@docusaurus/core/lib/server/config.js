"use strict";
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadSiteConfig = void 0;
const tslib_1 = require("tslib");
const path_1 = tslib_1.__importDefault(require("path"));
const fs_extra_1 = tslib_1.__importDefault(require("fs-extra"));
const import_fresh_1 = tslib_1.__importDefault(require("import-fresh"));
const utils_1 = require("@docusaurus/utils");
const configValidation_1 = require("./configValidation");
async function loadSiteConfig({ siteDir, customConfigFilePath, }) {
    const siteConfigPath = path_1.default.resolve(siteDir, customConfigFilePath ?? utils_1.DEFAULT_CONFIG_FILE_NAME);
    if (!(await fs_extra_1.default.pathExists(siteConfigPath))) {
        throw new Error(`Config file at "${siteConfigPath}" not found.`);
    }
    const importedConfig = (0, import_fresh_1.default)(siteConfigPath);
    const loadedConfig = typeof importedConfig === 'function'
        ? await importedConfig()
        : await importedConfig;
    const siteConfig = (0, configValidation_1.validateConfig)(loadedConfig);
    return { siteConfig, siteConfigPath };
}
exports.loadSiteConfig = loadSiteConfig;
